/**
 * Copyright 2019 ForgeRock AS.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Account and Transaction API Specification
 * Swagger for Account and Transaction API Specification
 *
 * OpenAPI spec version: v3.1.2-RC1
 * Contact: ServiceDesk@openbanking.org.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.org.openbanking.datamodel.account;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.Valid;
import java.util.Objects;

/**
 * PCA
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-06-13T15:59:01.633+01:00")
public class PCA {
    @JsonProperty("ProductDetails")
    private ProductDetails1 productDetails = null;

    @JsonProperty("CreditInterest")
    private CreditInterest1 creditInterest = null;

    @JsonProperty("Overdraft")
    private Overdraft1 overdraft = null;

    @JsonProperty("OtherFeesCharges")
    private OtherFeesCharges otherFeesCharges = null;

    public PCA productDetails(ProductDetails1 productDetails) {
        this.productDetails = productDetails;
        return this;
    }

    /**
     * Get productDetails
     *
     * @return productDetails
     **/
    @Valid
    @ApiModelProperty(value = "")
    public ProductDetails1 getProductDetails() {
        return productDetails;
    }

    public void setProductDetails(ProductDetails1 productDetails) {
        this.productDetails = productDetails;
    }

    public PCA creditInterest(CreditInterest1 creditInterest) {
        this.creditInterest = creditInterest;
        return this;
    }

    /**
     * Get creditInterest
     *
     * @return creditInterest
     **/
    @Valid
    @ApiModelProperty(value = "")
    public CreditInterest1 getCreditInterest() {
        return creditInterest;
    }

    public void setCreditInterest(CreditInterest1 creditInterest) {
        this.creditInterest = creditInterest;
    }

    public PCA overdraft(Overdraft1 overdraft) {
        this.overdraft = overdraft;
        return this;
    }

    /**
     * Get overdraft
     *
     * @return overdraft
     **/
    @Valid
    @ApiModelProperty(value = "")
    public Overdraft1 getOverdraft() {
        return overdraft;
    }

    public void setOverdraft(Overdraft1 overdraft) {
        this.overdraft = overdraft;
    }

    public PCA otherFeesCharges(OtherFeesCharges otherFeesCharges) {
        this.otherFeesCharges = otherFeesCharges;
        return this;
    }

    /**
     * Get otherFeesCharges
     *
     * @return otherFeesCharges
     **/
    @Valid
    @ApiModelProperty(value = "")
    public OtherFeesCharges getOtherFeesCharges() {
        return otherFeesCharges;
    }

    public void setOtherFeesCharges(OtherFeesCharges otherFeesCharges) {
        this.otherFeesCharges = otherFeesCharges;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PCA PCA = (PCA) o;
        return Objects.equals(this.productDetails, PCA.productDetails) &&
                Objects.equals(this.creditInterest, PCA.creditInterest) &&
                Objects.equals(this.overdraft, PCA.overdraft) &&
                Objects.equals(this.otherFeesCharges, PCA.otherFeesCharges);
    }

    @Override
    public int hashCode() {
        return Objects.hash(productDetails, creditInterest, overdraft, otherFeesCharges);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PCA {\n");

        sb.append("    productDetails: ").append(toIndentedString(productDetails)).append("\n");
        sb.append("    creditInterest: ").append(toIndentedString(creditInterest)).append("\n");
        sb.append("    overdraft: ").append(toIndentedString(overdraft)).append("\n");
        sb.append("    otherFeesCharges: ").append(toIndentedString(otherFeesCharges)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

